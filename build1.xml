<?xml version="1.0" encoding="UTF-8"?>
<project name="AntProject" basedir="." default="usage">

	<property file="build.properties"/>
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build/classes" />
	<property name="WebContent.dir" value="WebContent" />
	<property name="lib.dir" value="${WebContent.dir}/WEB-INF/lib" />
	<property name="dist.dir" value="dist" />
	<property name="test.reports" value="reports" />
	<property name="junit-xml-dir" value="test-output/junitreports" />
	<property name="report-dir" value="html-report/Junit" />
	<property name="name" value="AntProject" />
	
	<property name="web.dir" value="war"/>
	
	<path id="master-classpath">
		<pathelement location="${build.dir}" />
		<pathelement location="${WebContent.dir}/WEB-INF/lib/junit.jar" />
		<fileset dir="${WebContent.dir}/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>
	
	<target name="usage">
	   <echo message=""/>
	   <echo message="${name} build file"/>
	   <echo message="-----------------------------------"/>
	   <echo message=""/>
	   <echo message="Available targets are:"/>
	   <echo message=""/>
	   <echo message="deploy    --> Deploy application as directory"/>
	   <echo message="deploywar --> Deploy application as a WAR file"/>
	   <echo message=""/>
	 </target>

	<target name="clean" description="Clean the output directory">
		<delete>
			<fileset dir="${dist.dir}">
				<include name="*.war" />
				<include name="*.jar" />
			</fileset>
		</delete>
		<delete>
			<fileset dir="${build.dir}">
				<include name="*.class" />
			</fileset>
		</delete>
		<delete dir="${test.reports}" />
		<echo>clean success</echo>
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${test.reports}" />
		<echo>Directories is created</echo>
	</target>

	<target name="compile" depends="prepare">
		<javac includeantruntime="false" destdir="${build.dir}" srcdir="${src.dir}" source="1.7" target="1.7" debug="true">
			<classpath refid="master-classpath">
			</classpath>
		</javac>
		<echo>Compilation is success</echo>
	</target>

	<target name="jar" depends="compile">
		<jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.dir}" >
			<include name="**/*.class" />
			<exclude name="**/*Test.class" />
			<manifest>
				<attribute name="Main-Class" value="com.test.*" />
			</manifest>
		</jar>
		<echo>Jar is created</echo>
	</target>

	<target name="war" depends="jar">
		<war destfile="${dist.dir}/${ant.project.name}.war" webxml="${WebContent.dir}/WEB-INF/web.xml">
			<fileset dir="${WebContent.dir}">
				<include name="**/*.jsp"/>
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
				<include name="**/*.js"/>
			</fileset>
			<lib dir="${lib.dir}">
				<include name="**/*.jar" />
			</lib>
			<classes dir="${build.dir}" />
			<manifest>
				<attribute name="Main-Class" value="com.test*.*" />
			</manifest>
		</war>
		<echo>War is created</echo>
	</target>
	
	
	<target name="deploy" depends="compile" description="Deploy application">
	      <copy todir="${deploy.path}/${name}" 
	         preservelastmodified="true">
	         <fileset dir="${WebContent.dir}">
	            <include name="**/*.*"/>
	         </fileset>
	      </copy>
	   </target>


	   <target name="deploywar" depends="compile" description="Deploy application as a WAR file">
	      <war destfile="${name}.war" webxml="${WebContent.dir}/WEB-INF/web.xml">
	         <fileset dir="${WebContent.dir}">
	            <include name="**/*.*"/>
	         </fileset>
	      </war>
	      
	      <copy todir="${deploy.path}" preservelastmodified="true">
	         <fileset dir=".">
	            <include name="*.war"/>
	         </fileset>
	      </copy>
	   </target>


<!--	<target name="run-tests" depends="war">
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<pathelement path="${build.dir}" />
				<fileset dir="${WebContent.dir}/WEB-INF/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>

			<batchtest fork="yes" todir="${test.reports}">
				<formatter type="xml" />
				<fileset dir="${src.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test" depends="run-tests">
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${reports}\html\" />
		</junitreport>
	</target> -->

	<!--
  	<target name="test" depends="compile">
		<junit fork="yes" haltonfailure="no">
			<batchtest fork="yes" todir="${test.reports}">
				<fileset dir="${build.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
			<formatter type="plain" usefile="false" />
			<classpath refid="master-classpath" />
		</junit>
		<echo>Junit class is tested</echo>
	</target>
-->
	
	
	
	<path id="catalina-ant-classpath">
	<!-- We need the Catalina jars for Tomcat -->
	<!--  * for other app servers - check the docs -->
	   <fileset dir="${appserver.lib}">
	      <include name="catalina-ant.jar"/>
	   </fileset>
	</path>

	<taskdef name="install" classname="org.apache.catalina.ant.DeployTask">
	   <classpath refid="catalina-ant-classpath"/>
	</taskdef>
	<echo message="install done" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
	   <classpath refid="catalina-ant-classpath"/>
	</taskdef>
	<echo message="Reload done" />
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
	   <classpath refid="catalina-ant-classpath"/>
	</taskdef>
	<echo message="list done" />
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
	   <classpath refid="catalina-ant-classpath"/>
	</taskdef>
	<echo message="start done" />
	
	<target name="reload" description="Reload application in Tomcat">
	   <reload url="${tomcat.manager.url}" username="${tomcat.manager.username}"
	      password="${tomcat.manager.password}" path="/${name}"/>
	</target>
	<echo message="reload done" />

</project>